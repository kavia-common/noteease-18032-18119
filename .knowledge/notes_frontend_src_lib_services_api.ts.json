{"is_source_file": true, "format": "TypeScript", "description": "This file provides API service functions for interacting with a notes backend, including functions for listing, creating, updating, and deleting notes. It uses environment variables to determine API URL and includes fallback logic for demo mode.", "external_files": ["$lib/types"], "external_methods": ["fetch"], "published": ["getApiBaseUrl", "apiListNotes", "apiCreateNote", "apiUpdateNote", "apiDeleteNote"], "classes": [], "methods": [{"name": "export function getApiBaseUrl(): string | null { getApiBaseUrl", "description": "Returns the base URL for the notes API from environment variables, or null if not configured.", "scope": "", "scopeKind": ""}, {"name": "async function http<T>(path: string, init?: RequestInit): Promise<T> { http", "description": "Performs an HTTP request to the specified API endpoint, handling errors and response parsing.", "scope": "", "scopeKind": ""}, {"name": "export async function apiListNotes(query?: NotesQuery): Promise<Note[]> { apiListNotes", "description": "Fetches a list of notes from the backend API, with optional search query; falls back to empty list in demo mode.", "scope": "", "scopeKind": ""}, {"name": "export async function apiCreateNote(input: CreateNoteInput): Promise<Note> { apiCreateNote", "description": "Creates a new note via backend API; in demo mode, constructs a note with current timestamp and random ID.", "scope": "", "scopeKind": ""}, {"name": "export async function apiUpdateNote(id: NoteID, input: UpdateNoteInput): Promise<Note> { apiUpdateNote", "description": "Updates an existing note via backend API; in demo mode, merges input and current timestamp.", "scope": "", "scopeKind": ""}, {"name": "export async function apiDeleteNote(id: NoteID): Promise<void> { apiDeleteNote", "description": "Deletes a note via backend API; in demo mode, function resolves immediately without network call.", "scope": "", "scopeKind": ""}], "calls": ["import.meta", "getApiBaseUrl", "fetch", "http", "encodeURIComponent", "JSON.stringify", "crypto.randomUUID", "new Date().toISOString"], "search-terms": ["Notes API", "TypeScript notes service", "environment variable VITE_NOTES_API_URL", "NotesQuery", "CreateNoteInput", "UpdateNoteInput", "Note", "Notes backend"], "state": 2, "file_id": 15, "knowledge_revision": 43, "git_revision": "", "revision_history": [{"31": ""}, {"43": ""}], "ctags": [{"_type": "tag", "name": "EnvShape", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^type EnvShape = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "apiCreateNote", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^export async function apiCreateNote(input: CreateNoteInput): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiDeleteNote", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^export async function apiDeleteNote(id: NoteID): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiListNotes", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^export async function apiListNotes(query?: NotesQuery): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiUpdateNote", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^export async function apiUpdateNote(id: NoteID, input: UpdateNoteInput): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^  const base = getApiBaseUrl();$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}, {"_type": "tag", "name": "env", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^  const env = (import.meta as unknown as { env?: EnvShape }).env;$/", "language": "TypeScript", "kind": "constant", "scope": "getApiBaseUrl", "scopeKind": "function"}, {"_type": "tag", "name": "getApiBaseUrl", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^export function getApiBaseUrl(): string | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^async function http<T>(path: string, init?: RequestInit): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^    const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant", "scope": "apiCreateNote", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^    const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant", "scope": "apiUpdateNote", "scopeKind": "function"}, {"_type": "tag", "name": "qs", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^  const qs = query?.search ? `?q=${encodeURIComponent(query.search)}` : \"\";$/", "language": "TypeScript", "kind": "constant", "scope": "apiListNotes", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^  const res = await fetch(`${base}${path}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}, {"_type": "tag", "name": "text", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^    const text = await res.text().catch(() => \"\");$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/noteease-18032-18119/notes_frontend/src/lib/services/api.ts", "pattern": "/^  const url = env?.VITE_NOTES_API_URL;$/", "language": "TypeScript", "kind": "constant", "scope": "getApiBaseUrl", "scopeKind": "function"}], "hash": "f20527fab8bb176c2fd42dcc31831c44", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/services/api.ts"}